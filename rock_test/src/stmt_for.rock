//#prelude
import core:fmt.{print}
import core:runtime.{unreachable}

//#entry "for_loop"
//#expect(no_endl)
//123456789
//#!
proc test_for_loop() void {
    let mut idx = 0;
    for {
        idx += 1;
        print(idx);
        if idx == 9 {
            break;
        }
    }
}

//#entry "for_condition"
//#expect(no_endl)
//123456789
//123456789
//123456789
//123456789
//#!
proc test_for_condition() void {
    let mut idx = 0;
    for idx < 9 {
        idx += 1;
        print(idx);
    }
    idx = 0;
    print('\n');
    for (idx < 9) as bool16 {
        idx += 1;
        print(idx);
    }
    idx = 0;
    print('\n');
    for (idx < 9) as bool32 {
        idx += 1;
        print(idx);
    }
    idx = 0;
    print('\n');
    for (idx < 9) as bool64 {
        idx += 1;
        print(idx);
    }
}

//#entry "for_element"
proc test_for_element() void {}

//#entry "for_range"
//#expect(no_endl)
//0
//12345678
//123456789
//#!
proc test_for_range() void {
    for _ in 0..<0 {
        unreachable();
    }
    for idx in 0..=0 {
        print(idx);
    }
    print('\n');
    for idx in 1..<9 {
        print(idx);
    }
    print('\n');
    for idx in 1..=9 {
        print(idx);
    }
}

//#entry "for_pattern"
proc test_for_pattern() void {}

//#entry "for_element_diverges"
//#expect(no_endl)
//entered unreachable code at src/test.rock:3:9
//#!
proc test_for_element_diverges() void {
    for _ in [0, 1, 2] {
        unreachable();
    }
}

//#entry "for_range_diverges"
//#expect(no_endl)
//entered unreachable code at src/test.rock:3:9
//#!
proc test_for_range_diverges() void {
    for _ in 0..<10 {
        unreachable();
    }
}
